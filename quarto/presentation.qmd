---
title: "üç∑ √Ä boire üçª"
subtitle: "*L'histoire d'un breuvage*"
author: "`Guillaume DEVANT` & `Corentin DUCLOUX`"
format: 
    revealjs:
        theme: serif
        background-transition: fade
        transition: slide
        footer: "--- Machine Learning ---"
        logo: https://corentinducloux.fr/dossier_img/mecen_transparent.png
---

<link rel="stylesheet" 
href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">


## Introduction

- Une immersion en territoire alcoolis√© s'impose...
<div style="display: flex; justify-content: center; align-items: center; height: 90vh;">
<iframe width="800" height="380" src="https://www.youtube.com/embed/mZ6xNxpuIOQ" title="Bodh&#39;Aktan - √Ä boire" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe></div>

- *‚ÄúPour savoir qu'un verre √©tait de trop, encore faut-il l'avoir bu.‚Äù* - Georges Courteline

## Introduction

- Le 18 janvier approche, une date en apparence anodine mais tr√®s importante pour nos deux comp√®res.
- Pour cette journ√©e festive, nos 2 protagonistes se rendirent sur `vinatis.com` pour trouver un breuvage.
- Et c'est √† ce moment que l'histoire prend racine...

![](img\bouteille_dieu.png){fig-align="center"}

## Scraping

1. Scraping des liens
2. Scraping d'une bouteille `mystical_soup.py`
3. Stockage JSON `scraping_functions.py`

![](img\bouteille_scrap.png){fig-align="center"}

## Scraping, Partie I {.smaller}

`scraping_functions` $\Rightarrow$ Le coeur du scraper

1. Construit des URL avec *query parameters* en utilisant le package `yarl`.

```python
URL_INIT = URL.build(scheme="https", host="vinatis.com")
WHITE = "achat-vin-blanc"
RED = "achat-vin-rouge"
ROSE = "achat-vin-rose"

>>> URL_INIT / WHITE % {"page": 1, "tri": 7}
... URL('https://vinatis.com/achat-vin-blanc?page=1&tri=7')
```

2. `create_session` cr√©e une session HTML avec un User-Agent et un Proxy al√©atoire, pouvant changer entre les requ√™tes.
3. Poss√®de un d√©corateur `@random_waiter(min, max)` permettant de g√©n√©rer un temps d'attente al√©atoire entre les deux bornes sp√©cifi√©es entre chaque requ√™te **GET** pour √©viter d'envoyer trop de requ√™tes dans un laps de temps r√©duit.
4. `create_all_wine_urls` permet de cr√©er l'ensemble des liens **href**.
5. `export_wine_links` permet d'exporter ces liens dans un fichier CSV.

## Scraping, Partie II {.smaller}

1. On va ensuite requ√™ter ces liens **href** avec `extract_all_pages` et r√©cup√©rer les pages brutes en HTML.
2. La fonction `scraping` du module `mystical_soup` va permettre d'extraire toutes les informations int√©ressantes de la page brute et renvoyer la dataclass `Vin` s√©rialisable en *JSON*.

<i class="fa-solid fa-wine-bottle"></i> *Exemple* d'un `Vin` et ses caract√©ristiques s√©rialis√©s en *JSON* :

```json
{
        "name": "PINOT NOIR 2019 LAS PIZARRAS - ERRAZURIZ",
        "capacity": "0,75 L",
        "price": "94,90 ‚Ç¨",
        "price_bundle": null,
        "characteristics": "Vin Rouge / Chili / Central Valley / Aconcagua Valley DO / 13,5 % vol / 100% Pinot noir",
        "note": null,
        "keywords": [
            "El√©gance",
            "Finesse",
            "Harmonie"
        ],
        "others": null,
        "picture": "https://www.vinatis.com/67234-detail_default/pinot-noir-2019-las-pizarras-errazuriz.png",
        "classification": null,
        "millesime": "2019",
        "cepage": "100% Pinot noir",
        "gouts": "Rouge Charnu et fruit√©",
        "par_gouts": "Puissant",
        "oeil": "Robe rubis aux reflets violets.",
        "nez": "Nez complexe sur la griotte, les √©pices et les champignons (truffe).",
        "bouche": "Bouche fruit√©e et florale. Tanins structur√©s, √©l√©gants et fins. finale harmonieuse et persistante.",
        "temperature": "8-10¬∞C",
        "service": "En bouteille ou en carafe",
        "conservation_1": "2026",
        "conservation_2": "A boire et √† garder",
        "accords_vins": "Ap√©ritif, Entr√©e, Charcuterie, Viande rouge, Viande blanche, Volaille, Gibier, Champignon, Barbecue, Cuisine du monde, Fromage, Dessert fruit√©, Dessert chocolat√©",
        "accords_reco": "Gigot d'agneau aux herbes de Provence; Tikka massala; Plateau de fromages."
    }
```

## Cleaning {.smaller}

Mais ce *JSON* brut doit √™tre nettoy√© et consid√©rablement restructur√© !

1. Nous avons choisi d'utiliser `polars` üêª et non pas `pandas` üêº
2. Toutes les fonctions de nettoyage sont contenues dans `bear_cleaner.py`
3. La fonction `super_pipe` permet de chainer toutes les transformations dans un pipeline propre pour structurer notre **Dataframe**.

![](img\pandas_vs_polars.png){fig-align="center"}


## Machine Learning (ML)

1. Optimisation des param√®tres `models.py`
2. Prediction sur les donn√©es test `prediction.py`


![](img\bouteille_ecole.png){fig-align="center"}

## ML : Optimisation

- Choix des **21 variables explicatives**
- Choix de **6 mod√®les**
- Optimisation des param√®tres avec un Cross Validation

## ML : Pr√©diction - Regression

- Variable √† expliquer : `unit_price`
- Qualit√© : Anne Hidalgo

## ML : Pr√©diction - Classification

- Variable √† expliquer : `type` 
- Qualit√© : Vincent Perrolaz


## Application

## R√©f√©rences

- Images : **DALL-E**
